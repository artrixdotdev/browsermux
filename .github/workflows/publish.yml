name: Publish

on:
   release:
      types: [published]
   workflow_dispatch:

jobs:
   publish-to-crates:
      runs-on: ubuntu-latest
      steps:
         - name: Checkout
           uses: actions/checkout@v3

         - name: Publish
           uses: katyo/publish-crates@v2
           with:
              registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
              dry-run: ${{ inputs.plan == 'dry-run' }}

   publish-to-aur:
      runs-on: ubuntu-latest
      steps:
         # Get the latest release info
         - name: Get latest release
           id: latest
           uses: pozetroninc/github-action-get-latest-release@v0.7.0
           with:
              owner: artrixdotdev
              repo: browsermux

         # Download PKGBUILD asset attached to the release
         - name: Download PKGBUILD artifact
           uses: robinraju/release-downloader@v1.9
           with:
              repository: artrixdotdev/browsermux
              tag: ${{ steps.latest.outputs.release }}
              fileName: "PKGBUILD"

         # Prepare for AUR push
         - name: Setup AUR SSH
           run: |
              mkdir -p ~/.ssh
              echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts

         # Clone your AUR repo and update files
         - name: Push to AUR
           run: |
              git clone ssh://aur@aur.archlinux.org/browsermux.git aur-repo
              cp PKGBUILD aur-repo/

              pushd aur-repo
              makepkg --printsrcinfo > .SRCINFO
              git config user.name "GitHub Action"
              git config user.email "actions@github.com"
              git add PKGBUILD .SRCINFO
              git commit -m "Update to ${{ steps.latest.outputs.release }}"
              git push
              popd
